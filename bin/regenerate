#!/bin/sh
''''which python3 >/dev/null 2>&1 && exec python3 "$0" "$@" # '''
''''which python  >/dev/null 2>&1 && exec python  "$0" "$@" # '''
''''exec echo "Error: I can't find python anywhere"         # '''
#! /usr/bin/env python
#
# Manage registers in a hardware design
#
# Copyright (C) 2008  Donald N. Allingham
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

"""
Actual program. Parses the arguments, and initiates the main window
"""

import os
import sys

if os.path.dirname(sys.argv[0]) != ".":
    if sys.argv[0][0] == "/":
        fullPath = os.path.dirname(sys.argv[0])
    else:
        fullPath = os.path.join(os.getcwd(), os.path.dirname(sys.argv[0]))
else:
    fullPath = os.getcwd()
sys.path.insert(0, os.path.dirname(fullPath))

fullPath = os.path.join(fullPath, "..", "lib", "python", "regenerate")
if os.path.exists(fullPath):
    sys.path.insert(0, os.path.dirname(fullPath))


def run_gui(args):
    """
    Actually runs the program
    """
    import os

    try:
        if sys.version_info[0] == 2:
            pygtkcompat = None
        else:
            from gi import pygtkcompat
    except ImportError:
        pygtkcompat = None

    if pygtkcompat is not None:
        pygtkcompat.enable()
        pygtkcompat.enable_gtk(version='3.0')

    import gtk

    from regenerate.ui.regenerate_top import MainWindow
    from regenerate.settings import ini

    if gtk.pygtk_version < (2, 12, 0):
        sys.stderr.write('GTK version 2.12 or greater is required\n')
        sys.exit()

    edit = MainWindow()
    if args:
        try:
            edit.open_project(args[0], "file:///" + args[0])
        except IOError as msg:
            sys.stderr.write("regenerate: error: could not project file: ")
            sys.stderr.write("%s\n" % str(msg))
            sys.exit(1)
    elif ini.get("user", "last_project", False):
        filename = ini.get("user", "last_project", None)
        if filename and os.path.exists(filename):
            edit.open_project(filename, None)

    # Windows seems to have a real problem with threads. This little trick
    # allows us to get around it. Fortunately, Linux doesn't appear to be
    # broken in the same way.

    if os.name == 'nt':
        import gobject
        gobject.threads_init()
        gtk.threads_enter()
        gtk.main()
        gtk.threads_leave()
    else:
        gtk.main()


def run():
    """
    main program
    """
    from optparse import OptionParser
    from regenerate import PROGRAM_VERSION, PROGRAM_NAME

    parser = OptionParser(
        usage="%prog [project file]",
        description="Manages the registers in an ASIC or FPGA design",
        prog=PROGRAM_NAME,
        version=PROGRAM_VERSION
    )

    (options, args) = parser.parse_args()

    run_gui(args)


if __name__ == "__main__":
    run()
