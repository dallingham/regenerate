/*----------------------------------------------------------------------------
 *
 * {{ports.interface_name}}
 *
 *----------------------------------------------------------------------------
 */
 
interface {{ports.interface_name}}
  #(
    parameter int pAddressWidth = {{ports.address_bus_width}},
    parameter int pDataWidth = {{ports.data_bus_width}}
    )
   (
    input logic                   {{CLK}}, // Input clock
    input logic                   {{RST}} // Reset
    );

   logic [pAddressWidth-1:0]      {{ADDR}}; // Address
   logic [$clog2(pDataWidth)-1:0] {{BE}}; // Byte enables
   logic                          {{WR}}; // Write strobe
   logic                          {{RD}}; // Read strobe
   logic [pDataWidth-1:0]         {{WDATA}}; // Write data
   logic [pDataWidth-1:0]         {{RDATA}}; // Read data
   logic                          {{ACK}}; // Acknowledge

   modport {{ports.modport_name}}
     (
      input  {{CLK}},
      input  {{RST}},
      input  {{ADDR}},
      input  {{WR}},
      input  {{RD}},
      input  {{BE}},
      input  {{WDATA}},
      output {{RDATA}},
      output {{ACK}}
      );

   modport {{ports.imodport_name}}
     (
      input  {{CLK}},
      input  {{RST}},
      output {{ADDR}},
      output {{WR}},
      output {{RD}},
      output {{BE}},
      output {{WDATA}},
      input  {{RDATA}},
      input  {{ACK}}
      );

{% if options["bool:assert"] %}

   // synopsys translate_off

   /*-------------------------------------------------------------------------
    * 
    * Write and read strobes cannot be asserted at the same time
    *
    *-------------------------------------------------------------------------
    */

   ERR_WR_RD_NOT_CONCURRENT:
     assert property
       (@(posedge {{CLK}}) disable iff ({{RESET_CONDITION}})
        (!({{WR}} | {{RD}})))
        else $error("{{WR}} and {{RD}} must not be asserted at the same time");

   ERR_UNEXPECTED_ACK:
     assert property
       (@(posedge {{CLK}}) disable iff ({{RESET_CONDITION}})
        {{ACK}} |-> ({{RD}} | {{WR}}))
        else $error("{{ACK}} asserted while {{RD}} and {{WR}} are deasserted");       


   // synopsys translate_on
{% endif %}

endinterface : {{ports.interface_name}}
